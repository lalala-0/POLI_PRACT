// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/config/collection-interval": {
            "post": {
                "description": "Изменяет временной интервал между сборами метрик агента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configuration"
                ],
                "summary": "Обновление интервала сбора метрик",
                "parameters": [
                    {
                        "description": "Интервал сбора в секундах (положительное число)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "interval_seconds": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Интервал успешно обновлен",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "interval_seconds": {
                                    "type": "integer"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные входные данные",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/containers": {
            "post": {
                "description": "Устанавливает список Docker контейнеров, метрики которых будут собираться",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configuration"
                ],
                "summary": "Обновление списка отслеживаемых контейнеров",
                "parameters": [
                    {
                        "description": "Массив имён контейнеров для отслеживания",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "containers": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Конфигурация успешно обновлена",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный формат данных или пустой список",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/processes": {
            "post": {
                "description": "Устанавливает список процессов, метрики которых будут собираться",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configuration"
                ],
                "summary": "Обновление списка отслеживаемых процессов",
                "parameters": [
                    {
                        "description": "Массив имён процессов для отслеживания",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "processes": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Конфигурация успешно обновлена",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный формат данных или пустой список",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/health": {
            "get": {
                "description": "Проверяет работоспособность агента и возвращает статус",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Проверка работоспособности",
                "responses": {
                    "200": {
                        "description": "Агент работает",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/metrics": {
            "get": {
                "description": "Возвращает все собранные метрики агента",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Получение всех метрик",
                "responses": {
                    "200": {
                        "description": "Все метрики",
                        "schema": {
                            "$ref": "#/definitions/models.AgentMetrics"
                        }
                    }
                }
            }
        },
        "/api/metrics/containers": {
            "get": {
                "description": "Возвращает метрики отслеживаемых Docker контейнеров",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Получение метрик контейнеров",
                "responses": {
                    "200": {
                        "description": "Метрики контейнеров",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "containers": {
                                    "type": "array"
                                },
                                "host_id": {
                                    "type": "string"
                                },
                                "timestamp": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Список отслеживаемых контейнеров не настроен",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/metrics/network": {
            "get": {
                "description": "Возвращает информацию о сетевых соединениях и открытых портах",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Получение сетевых метрик",
                "responses": {
                    "200": {
                        "description": "Сетевые метрики",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "host_id": {
                                    "type": "string"
                                },
                                "ports": {
                                    "type": "array"
                                },
                                "timestamp": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/metrics/processes": {
            "get": {
                "description": "Возвращает метрики отслеживаемых процессов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Получение метрик процессов",
                "responses": {
                    "200": {
                        "description": "Метрики процессов",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "host_id": {
                                    "type": "string"
                                },
                                "processes": {
                                    "type": "array"
                                },
                                "timestamp": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Список отслеживаемых процессов не настроен",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/metrics/system": {
            "get": {
                "description": "Возвращает только системные метрики агента",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Получение системных метрик",
                "responses": {
                    "200": {
                        "description": "Системные метрики",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "host_id": {
                                    "type": "string"
                                },
                                "system": {
                                    "type": "object"
                                },
                                "timestamp": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AgentMetrics": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContainerInfo"
                    }
                },
                "host_id": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PortInfo"
                    }
                },
                "processes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProcessInfo"
                    }
                },
                "system": {
                    "$ref": "#/definitions/models.SystemMetrics"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.CPUMetrics": {
            "type": "object",
            "properties": {
                "usage_percent": {
                    "description": "Процент использования CPU",
                    "type": "number"
                }
            }
        },
        "models.ContainerInfo": {
            "type": "object",
            "properties": {
                "cpu_percent": {
                    "description": "Процент использования CPU",
                    "type": "number"
                },
                "id": {
                    "description": "Короткий ID контейнера",
                    "type": "string"
                },
                "image": {
                    "description": "Образ контейнера",
                    "type": "string"
                },
                "mem_percent": {
                    "description": "Процент использования памяти",
                    "type": "number"
                },
                "name": {
                    "description": "Имя контейнера",
                    "type": "string"
                },
                "status": {
                    "description": "Статус (running, stopped, etc.)",
                    "type": "string"
                }
            }
        },
        "models.DiskMetrics": {
            "type": "object",
            "properties": {
                "free": {
                    "description": "Свободный объем в байтах",
                    "type": "integer"
                },
                "total": {
                    "description": "Общий объем в байтах",
                    "type": "integer"
                },
                "usage_percent": {
                    "description": "Процент использования",
                    "type": "number"
                },
                "used": {
                    "description": "Используемый объем в байтах",
                    "type": "integer"
                }
            }
        },
        "models.PortInfo": {
            "type": "object",
            "properties": {
                "port": {
                    "description": "Номер порта",
                    "type": "integer"
                },
                "protocol": {
                    "description": "Протокол (TCP/UDP)",
                    "type": "string"
                },
                "state": {
                    "description": "Состояние (LISTEN, etc.)",
                    "type": "string"
                }
            }
        },
        "models.ProcessInfo": {
            "type": "object",
            "properties": {
                "cpu_percent": {
                    "description": "Процент использования CPU",
                    "type": "number"
                },
                "mem_percent": {
                    "description": "Процент использования памяти",
                    "type": "number"
                },
                "name": {
                    "description": "Имя процесса",
                    "type": "string"
                },
                "pid": {
                    "description": "ID процесса",
                    "type": "integer"
                }
            }
        },
        "models.RAMMetrics": {
            "type": "object",
            "properties": {
                "free": {
                    "description": "Свободный объем в байтах",
                    "type": "integer"
                },
                "total": {
                    "description": "Общий объем в байтах",
                    "type": "integer"
                },
                "usage_percent": {
                    "description": "Процент использования",
                    "type": "number"
                },
                "used": {
                    "description": "Используемый объем в байтах",
                    "type": "integer"
                }
            }
        },
        "models.SystemMetrics": {
            "type": "object",
            "properties": {
                "cpu": {
                    "$ref": "#/definitions/models.CPUMetrics"
                },
                "disk": {
                    "$ref": "#/definitions/models.DiskMetrics"
                },
                "ram": {
                    "$ref": "#/definitions/models.RAMMetrics"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Agent API",
	Description:      "API сервиса мониторинга",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
