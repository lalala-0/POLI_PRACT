#version: '3.8'

services:
  # Центр мониторинга
  monitoring-center:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      - CONFIG_PATH=/center/config/config.yml
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=monitoring
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=metrics
    volumes:
      - monitoring-logs:/center/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped #always

  # PostgreSQL для хранения конфигурации хостов
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=monitoring
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # MongoDB для хранения метрик
  mongodb:
    image: mongo:5
    hostname: mongodb
    container_name: build-mongodb-1
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped


volumes:
  postgres_data:
  mongo_data:
  monitoring-logs:
