server:
  port: "8080"
  read_timeout: 30s
  write_timeout: 30s

postgres:
  host: "build-postgres-1"
  port: "5432"
  user: "postgres"
  password: "password"
  dbname: "monitoring"
  sslmode: "disable"
  driver: "postgres"
  maxOpenConns: 25
  maxIdleConns: 5
  connMaxLifetime: 5m

mongodb:
  uri: "mongodb://mongodb:27017"
  dbname: "metrics"
  connectTimeout: 5s
  maxPoolSize: 20
  minPoolSize: 5
  serverSelectionTimeout: 10s

metrics:
  poll_interval: 60s
  metrics_ttl_days: 14
  self_check_interval: 5m

  system:
    enabled: true
    collect_cpu: true
    collect_ram: true
    collect_disks: true

  process:
    enabled: true

  network:
    enabled: true
    monitor_tcp: true
    monitor_udp: true

  container:
    enabled: true

logging:
  level: "info"
  file_path: "/app/logs/monitoring.log"
  max_size: 100
  max_backups: 5
  max_age: 30
  compress: true

alerts:
  telegram:
    token: "<YOUR_BOT_TOKEN>"
    chat_id: "<CHAT_ID>"

  email:
    to:
      - "admin1@example.com"
      - "admin2@example.com"
    smtp_host: "smtp.example.com"
    smtp_port: 587
    username: "your_email@example.com"
    password: "email_password"

  failure_threshold_percent: 90
  interval_seconds: 60

initial_data:
  hosts:
    - hostname: "12345"
      ip_address: 192.168.58.129
      agent_port: 8081
      priority: 10
      is_master: true
      status: "active"
      processes:
        - "nginx"
        - "postgres"
        - "redis"
      containers:
        - "build-mongodb-1"
        - "build-postgres-1"
